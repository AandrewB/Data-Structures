// Name: Andrew Burgos

//Class CS 3305 W02

// Term: Spring 2025

// Instructor: Umama Tasnim


import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class testPalindrome {

    // Function to test character by character palindrome
    public static void testCharacterPalindrome(String input) {
        Queue<Character> queue = new LinkedList<>();
        String cleanedInput = input.replaceAll("[^a-zA-Z]", "").toLowerCase();

        // Add characters to the queue
        for (char c : cleanedInput.toCharArray()) {
            queue.offer(c);
        }

        boolean isPalindrome = true;
        int length = queue.size();

        // Check if the string is a palindrome
        for (int i = 0; i < length / 2; i++) {
            char front = queue.poll();
            char back = cleanedInput.charAt(length - 1 - i);
            if (front != back) {
                isPalindrome = false;
                break;
            }
        }


        System.out.println("Judgment: " + (isPalindrome ? "Palindrome" : "Not Palindrome"));
    }

    // Function to test word by word palindrome
    public static void testWordPalindrome(String input) {
        Queue<String> queue = new LinkedList<>();
        String[] words = input.split("\\W+");

        // Adds the string to the queue
        for (String word : words) {
            if (!word.isEmpty()) {
                queue.offer(word.toLowerCase()); // Convert to lowercase
            }
        }

        boolean isPalindrome = true;
        int length = queue.size();

        // checks if the strings form palindrome
        for (int i = 0; i < length / 2; i++) {
            String front = queue.poll(); // Remove from front
            String back = words[length - 1 - i].toLowerCase(); // Check against the word
            if (!front.equals(back)) {
                isPalindrome = false;
                break;
            }
        }

        System.out.println("Judgment: " + (isPalindrome ? "Palindrome" : "Not Palindrome"));
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int option;
        // do while loop to keep the program running until user selects case 3
        do {

            System.out.println("------MAIN MENU------");
            System.out.println("1. Test character-by-character palindrome");
            System.out.println("2. Test word-by-word palindrome");
            System.out.println("3. Exit program");
            System.out.print("Enter option number: ");
            option = scanner.nextInt();
            scanner.nextLine();

            switch (option) {
                case 1:
                    System.out.print("Enter a string: ");
                    String charInput = scanner.nextLine();
                    System.out.println("You selected: Option 1");
                    System.out.println("You entered: " + charInput);
                    testCharacterPalindrome(charInput);
                    System.out.println();
                    break;
                case 2:
                    System.out.print("Enter a string: ");
                    String wordInput = scanner.nextLine();
                    System.out.println("You selected: Option 2");
                    System.out.println("You entered: " + wordInput);
                    testWordPalindrome(wordInput);
                    System.out.println();
                    break;
                case 3:
                    System.out.println("Exiting program.");
                    break;
                default:
                    System.out.println("Invalid option. Please try again.");
                    System.out.println();
            }
        } while (option != 3);

        scanner.close();
    }
}
